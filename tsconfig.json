{
	"extends": "@tsconfig/svelte/tsconfig.json",
	"compilerOptions": {
		"lib": ["es5", "es6", "dom"],
		"moduleResolution": "node",
		"target": "es6",
		"module": "esnext",
		/**
		 * svelte-preprocess cannot figure out whether you have
		 * a value or a type, so tell TypeScript to enforce using
		 * `import type` instead of `import` for Types.
		 */
		"importsNotUsedAsValues": "error",
		"isolatedModules": true,
		"resolveJsonModule": true,
		/**
		 * To have warnings / errors of the Svelte compiler at the
		 * correct position, enable source maps by default.
		 */
		"sourceMap": true,
		"esModuleInterop": true,
		"skipLibCheck": true,
		"forceConsistentCasingInFileNames": true,
		"baseUrl": ".",
		/**
		 * Typecheck JS in `.svelte` and `.js` files by default.
		 * Disable this if you'd like to use dynamic types.
		 */
		"checkJs": true,
		"outDir": "./built"
	},
	"include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.svelte"],
	"exclude": [
		"./built/**/*" // This is what fixed it!
	]
}
